{"version":3,"sources":["index.js"],"names":["Clock","state","date","Date","startClock","_this","timerID","setInterval","tick","setState","setColorScheme","hour","getHours","handleStopTimeClick","clearInterval","handleStartTimeClick","this","getColor","backgroundColor","concat","color","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","style","toLocaleTimeString","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6NAIMA,oNACJC,MAAQ,CACNC,KAAM,IAAIC,QAGZC,WAAa,WACXC,EAAKC,QAAUC,YACb,kBAAMF,EAAKG,QACX,QAIJA,KAAO,WACLH,EAAKI,SAAS,CACZP,KAAM,IAAIC,UAIdO,eAAiB,WACf,IAAMC,EAAON,EAAKJ,MAAMC,KAAKU,WAC7B,OAAID,EAAO,GAAKA,EAAO,GACd,OAEA,UAYXE,oBAAsB,WACpBC,cAAcT,EAAKC,YAGrBS,qBAAuB,WACrBV,EAAKD,iGAZLY,KAAKZ,4DAILU,cAAcE,KAAKV,0CAYnB,IAAMW,EAAW,CACfC,gBAAiB,CACfA,gBAAe,GAAAC,OAAKH,KAAKN,mBAE3BU,MAAO,CACLA,MAAK,GAAAD,OAAKH,KAAKN,oBAInB,OACEW,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUC,MAAOR,EAASC,iBACvCG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAcR,KAAKf,MAAMC,KAAKwB,uBAE7CL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,UACEI,QAASX,KAAKH,oBACdY,MAAOR,EAASG,OAFlB,QAKAC,EAAAC,EAAAC,cAAA,UACEI,QAASX,KAAKD,qBACdU,MAAOR,EAASG,OAFlB,oBAlEMQ,IAAMC,YAgF1BC,IAASC,OACPV,EAAAC,EAAAC,cAACvB,EAAD,MACAgC,SAASC,eAAe","file":"static/js/main.662768e9.chunk.js","sourcesContent":["import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\n\nclass Clock extends React.Component {\n  state = {\n    date: new Date()\n  }\n\n  startClock = () => {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    )\n  }\n\n  tick = () => {\n    this.setState({\n      date: new Date()\n    })\n  }\n\n  setColorScheme = () => {\n    const hour = this.state.date.getHours()\n    if (hour > 6 && hour < 20) {\n      return \"#fff\"\n    } else {\n      return \"#000\"\n    }\n  }\n\n  componentDidMount() {\n    this.startClock()\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID)\n  }\n\n  handleStopTimeClick = () => {\n    clearInterval(this.timerID)\n  }\n\n  handleStartTimeClick = () => {\n    this.startClock()\n  }\n\n  render() {\n    const getColor = {\n      backgroundColor: {\n        backgroundColor: `${this.setColorScheme()}`\n      },\n      color: {\n        color: `${this.setColorScheme()}`\n      }\n    }\n\n    return (\n      <div>\n        <div className=\"wrapper\" style={getColor.backgroundColor}>\n          <div className=\"container\">\n            <div className=\"clock-container\">\n              <p className=\"clock-face\">{this.state.date.toLocaleTimeString()}</p>\n            </div>\n            <div className=\"button-container\">\n              <button\n                onClick={this.handleStopTimeClick}\n                style={getColor.color}>\n                Stop\n              </button>\n              <button\n                onClick={this.handleStartTimeClick}\n                style={getColor.color}>\n                Start\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nReactDOM.render(\n  <Clock />,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}